/*
 * 
 * Flappy Bird code taken from https://github.com/nebez/floppybird
 * 
 * 
 * 
 */

#include <WiFi.h>
 extern "C" {
 #include "base64.h"
 }
#include "base64.hpp"


const char* ssid     = "SSID";
const char* password = "PASSWORD";

WiFiServer server(80);

/* HTML Website base64 Encoded */
char * htmlStart = "";
char * jquery1 = "";
char * jquery2 = "";
char * jquery3 = "";
char * transit = "";
char * buzz = "";
char * game1 = "";
char * game2 = "";
void setup()
{
    Serial.begin(115200);

    // We start by connecting to a WiFi network

    Serial.println();
    Serial.println();
    Serial.print("Connecting to ");
    Serial.println(ssid);

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());
    
    server.begin();

}

int value = 0;

void loop(){
 WiFiClient client = server.available();   // listen for incoming clients

  if (client) {                             // if you get a client,
    Serial.println("New Client.");           // print a message out the serial port
    String currentLine = "";                // make a String to hold incoming data from the client
    while (client.connected()) {            // loop while the client's connected
      if (client.available()) {             // if there's bytes to read from the client,
        char c = client.read();             // read a byte, then
        Serial.write(c);                    // print it out the serial monitor
        if (c == '\n') {                    // if the byte is a newline character

          // if the current line is blank, you got two newline characters in a row.
          // that's the end of the client HTTP request, so send a response:
          if (currentLine.length() == 0) {
            // HTTP headers always start with a response code (e.g. HTTP/1.1 200 OK)
            // and a content-type so the client knows what's coming, then a blank line:
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            // the content of the HTTP response follows the header:
           size_t outputLength;
unsigned char *decoded = (unsigned char *)malloc(strlen(htmlStart));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)htmlStart, decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

client.println("<script>");

decoded = (unsigned char *)malloc(strlen(jquery1));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)jquery1, strlen(jquery1), decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

decoded = (unsigned char *)malloc(strlen(jquery2));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)jquery2, strlen(jquery2), decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

decoded = (unsigned char *)malloc(strlen(jquery3));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)jquery3, strlen(jquery3), decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

client.println("</script><script>");

decoded = (unsigned char *)malloc(strlen(transit));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)transit, strlen(transit), decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

client.println("</script><script>");

decoded = (unsigned char *)malloc(strlen(buzz));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)buzz, strlen(buzz), decoded);
    client.printf("%.*s", outputLength, decoded);
    free(decoded);
}

client.println("</script><script>");

decoded = (unsigned char *)malloc(strlen(game1));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)game1, strlen(game1), decoded);
    if (outputLength > 0) {
        client.write(decoded, outputLength);
    }
    free(decoded);
}

decoded = (unsigned char *)malloc(strlen(game2));
if (decoded) {
    outputLength = decode_base64((const unsigned char *)game2, strlen(game2), decoded);
    if (outputLength > 0) {
        client.write(decoded, outputLength);
    }
    free(decoded);
}

client.println("</script></body></html>");

            // The HTTP response ends with another blank line:
            client.println();
            // break out of the while loop:
            break;
          } else {    // if you got a newline, then clear currentLine:
            currentLine = "";
          }
        } else if (c != '\r') {  // if you got anything else but a carriage return character,
          currentLine += c;      // add it to the end of the currentLine
        }

        // Check to see if the client request was "GET /H" or "GET /L":
        if (currentLine.endsWith("GET /H")) {
          digitalWrite(5, HIGH);               // GET /H turns the LED on
        }
        if (currentLine.endsWith("GET /L")) {
          digitalWrite(5, LOW);                // GET /L turns the LED off
        }
      }
    }
    // close the connection:
    client.stop();
    Serial.println("Client Disconnected.");
  }
}
